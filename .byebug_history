continue
team_filter.where("last_name LIKE ?", "#{params[:search]}%".titleize())
team_filter = Player.where(plays_for_team: params[:filter])
params
exit
search.sort_by { |player| player.first_name }
search.first.first_name
search.first
search
exit
player = Player.destroy(88)
!playerIDs.include?(players[88].id)
!playerIDs.include?(players[3397].id)
playerIDs.include?(players[3397].id)
playerIDs.include?(players[3398].id)
players.length
playerIDs.include?(players[88].id)
playerIDs.include?(players[2000].id)
playerIDs.include?(players[1000].id)
playerIDs.include?(players[-1].id)
playerIDs.include?(players[144].id)
playerIDs.include?(players[200].id)
playerIDs.include?(players[3547288].id)
playerIDs.include?(players.first.id)
players = Player.all
Player.find_by(id: 3547288)
Player.find_by(player_id: 3547288)
Player.where(player_id: 3547288)
Player.where(id: 354728)
playerIDs.include?(Player.all.id)
playerIDs.include?(Player.find(3547288).id)
playerIDs.include?(Player.find(3547288))
playerIDs.include?(Player.find(4))
playerIDs.include?(Player.first)
destroy
player
exit
playerIDs
exit
load './app/assets/players.rb'
require 'players'
playerIDs
exit
        team.contracts.find_by(player_id: params[:player_id]).destroy
team.contracts.find(player_id: params[:player_id])
team.contracts.find(params[:player_id])
team.contracts.destroy(params[:player_id])
team.contracts
team.contract
team = Team.find(params[:team_id])
Team.find(params[:team_id])
params
exit
exit}
players.each { |p| p[:id] }
players.each { |p| p.first_name }
players.each { |p| "hey" }
players.all["id"]
players.first["id"]
players.map { |player| return  player["id"] }
players.each { |player| return  player["id"] }
players.each { |player| return  player["id] }
players.each { |player| player["id] }
players.count
exit
responses.each { |r| puts r["id"] }
responses.each { |r| puts r.id }
responses.each { |r| print r.id }
response.first
players
players << response
players
HTTParty.get("https://www.balldontlie.io/api/v1/season_averages?player_ids[]=#{response["id"]}")["data"].length == 1
HTTParty.get("https://www.balldontlie.io/api/v1/season_averages?player_ids[]=#{response["id"]}")["data"].length == 0
exit
HTTParty.get("https://www.balldontlie.io/api/v1/season_averages?player_ids[]=#{responses.first["id"]}")["data"].length
HTTParty.get("https://www.balldontlie.io/api/v1/season_averages?player_ids[]=237")["data"].length
HTTParty.get("https://www.balldontlie.io/api/v1/season_averages?player_ids[]=237")["data"]
HTTParty.get("https://www.balldontlie.io/api/v1/season_averages?player_ids[]=237)["data"]
HTTParty.get("https://www.balldontlie.io/api/v1/season_averages?player_ids[]=#{responses.first["id"]}")["data"]
responses.first["id"]
responses.first.id
responses.first
responses
exit
Team.find(params[:team_id]).contracts.length < 5
Team.find(params[:team_id]).contracts.length
exit
Player.where("concat_ws(' ', first_name, last_name) LIKE ?", "%#{params[:search]}%".titleize())
Player.where("concat(first_name, last_name) like ?", "%#{params[:search]}%".titleize().presence || all)
Player.where("concat(first_name, last_name) like ?", "%#{params[:search]}%".titleize())
Player.where("concat(first_name, last_name) like ?", "#{params[:search]}%".titleize())
Player.where("first_name AND last_name like ?", "#{params[:search]}%".titleize())
Player.where("first_name, last_name like ?", "#{params[:search]}%".titleize())
"#{params[:search]}%".titleize()
"#{params[:search]}%".capitalize()
"%#{params[:search]}%"
"#{params[:search]}%"
params[:search]
exit
Player.where("first_name like ?", "#{params[:search]}%".capitalize())
Player.where("first_name like ?", "%#{params[:search]}%".capitalize())
Player.where("first_name like ?", "%Jame%")
Player.where("first_name like ?", "%#{params[:search]}%.capitalize()")
%#{params[:search]}%
"%#{params[:search]}%"
"#{params[:search]}%"
Player.where(first_name:)
params[:search].capitalize()
exit
Team.find(params[:team_id])
exit
params
Team.find(params[:team_id])
teams
teams = Team.where(id: params[:team_id])
teams.map { |team| return team.contracts }
teams = Team.where(id: params[:team_id])
Team.where(id: params[:team_id])
Team.where(id: params[:team_id]).first.contracts
Team.where(id: params[:team_id]).first
Team.where(id: params[:team_id]).contracts
Team.where(id: params[:team_id]).contract
Team.where(id: params[:team_id])
Team.where(id: params[:team_id]).contract
Team.where(id: params[:team_id]).roster
Team.where(id: params[:team_id])
params
exit
params
continue
exit
Team.create(team_name: params[:create][:team_name], salary: 100000, roster: [], user_id:  params[:user_id])
Team.create(team_name: params[:create][:team_name], salary: 100000, roster: user_id:  params[:user_id])
 params[:user_id]
params[:create][:team_name], params[:user_id]
params[:create][:team_name]
params[:create}[:team_name]
params[:team_name}
params
exit
params[:create][:team_name]
params[:create]
params[:team]
params[:team][:team_nam]
params[:team_name]
params
params[:team_name]
params[:currentUser][:id]
params[:currentUser].id
params[:currentUser]
params
exit
params
continue
exit
params
exit
continue
params
exit
Contract.find_by(player_id: params[:player_id])
params
exit
Contract.all
